@page
@model RazorPagesMovie.Pages.Movies.DeleteModel

@{
    ViewData["Title"] = "Delete Movie";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="display-4 text-danger">
        <i class="fas fa-trash-alt me-2"></i>Delete Movie
    </h1>
</div>

<div class="alert alert-danger" role="alert">
    <i class="fas fa-exclamation-triangle me-2"></i>
    <strong>Warning!</strong> Are you sure you want to permanently delete this movie? This action cannot be undone.
</div>

<div class="row">
    <!-- Movie Information to Delete -->
    <div class="col-md-4">
        <div class="card border-danger">
            <div class="card-body text-center">
                @if (!string.IsNullOrEmpty(Model.Movie.ImageUrl))
                {
                    <img src="@Model.Movie.ImageUrl" alt="@Model.Movie.Title" class="img-fluid rounded mb-3" 
                         style="max-height: 300px; object-fit: cover;" 
                         onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                    <div style="display: none;" class="text-center py-4">
                        <i class="fas fa-film fa-4x text-muted mb-3"></i>
                        <p class="text-muted">No poster available</p>
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-film fa-4x text-muted mb-3"></i>
                        <p class="text-muted">No poster available</p>
                    </div>
                }
                
                <h4 class="card-title text-danger">@Model.Movie.DisplayTitle</h4>
                
                <div class="d-flex justify-content-center gap-2 mb-3">
                    <span class="badge bg-@Model.Movie.GetRatingColor()">@Model.Movie.Rating</span>
                    @if (Model.Movie.IsNewRelease())
                    {
                        <span class="badge bg-success">New Release</span>
                    }
                    @if (Model.Movie.IsClassic())
                    {
                        <span class="badge bg-warning text-dark">Classic</span>
                    }
                </div>

                <div class="d-flex justify-content-between text-center">
                    <div>
                        <small class="text-muted">Duration</small>
                        <div><strong>@Model.Movie.GetFormattedDuration()</strong></div>
                    </div>
                    <div>
                        <small class="text-muted">Price</small>
                        <div><strong>@Model.Movie.Price.ToString("C")</strong></div>
                    </div>
                    <div>
                        <small class="text-muted">Age</small>
                        <div><strong>@Model.Movie.MovieAge years</strong></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Detailed Information -->
    <div class="col-md-8">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h5 class="card-title mb-0">
                    <i class="fas fa-info-circle me-2"></i>Movie Details to be Deleted
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <dl class="row mb-0">
                            <dt class="col-sm-5">
                                <i class="fas fa-film me-2"></i>@Html.DisplayNameFor(model => model.Movie.Title)
                            </dt>
                            <dd class="col-sm-7">@Html.DisplayFor(model => model.Movie.Title)</dd>

                            <dt class="col-sm-5">
                                <i class="fas fa-calendar me-2"></i>@Html.DisplayNameFor(model => model.Movie.ReleaseDate)
                            </dt>
                            <dd class="col-sm-7">@Html.DisplayFor(model => model.Movie.ReleaseDate)</dd>

                            <dt class="col-sm-5">
                                <i class="fas fa-tags me-2"></i>@Html.DisplayNameFor(model => model.Movie.Genre)
                            </dt>
                            <dd class="col-sm-7">
                                <span class="badge bg-secondary">@Html.DisplayFor(model => model.Movie.Genre)</span>
                            </dd>

                            <dt class="col-sm-5">
                                <i class="fas fa-user-tie me-2"></i>@Html.DisplayNameFor(model => model.Movie.Director)
                            </dt>
                            <dd class="col-sm-7">@Html.DisplayFor(model => model.Movie.Director)</dd>
                        </dl>
                    </div>

                    <div class="col-md-6">
                        <dl class="row mb-0">
                            <dt class="col-sm-5">
                                <i class="fas fa-language me-2"></i>@Html.DisplayNameFor(model => model.Movie.Language)
                            </dt>
                            <dd class="col-sm-7">@Html.DisplayFor(model => model.Movie.Language)</dd>

                            <dt class="col-sm-5">
                                <i class="fas fa-globe me-2"></i>@Html.DisplayNameFor(model => model.Movie.Country)
                            </dt>
                            <dd class="col-sm-7">@Html.DisplayFor(model => model.Movie.Country)</dd>

                            <dt class="col-sm-5">
                                <i class="fas fa-star me-2"></i>@Html.DisplayNameFor(model => model.Movie.ImdbRating)
                            </dt>
                            <dd class="col-sm-7">
                                @if (Model.Movie.ImdbRating.HasValue)
                                {
                                    <span>@Model.Movie.ImdbRating.Value.ToString("F1")</span>
                                }
                                else
                                {
                                    <span class="text-muted">Not rated</span>
                                }
                            </dd>

                            <dt class="col-sm-5">
                                <i class="fas fa-check-circle me-2"></i>@Html.DisplayNameFor(model => model.Movie.IsAvailable)
                            </dt>
                            <dd class="col-sm-7">
                                @if (Model.Movie.IsAvailable)
                                {
                                    <span class="badge bg-success">Available</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Not Available</span>
                                }
                            </dd>
                        </dl>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Movie.Description))
                {
                    <hr class="my-3">
                    <div>
                        <h6><i class="fas fa-align-left me-2"></i>Description</h6>
                        <p class="text-muted">@Html.DisplayFor(model => model.Movie.Description)</p>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.Movie.Cast))
                {
                    <hr class="my-3">
                    <div>
                        <h6><i class="fas fa-users me-2"></i>Cast</h6>
                        <p class="text-muted">@Html.DisplayFor(model => model.Movie.Cast)</p>
                    </div>
                }

                <hr class="my-3">
                <div class="row text-center">
                    <div class="col-6">
                        <small class="text-muted">Added on</small>
                        <div><strong>@Model.Movie.DateAdded.ToString("MMM dd, yyyy")</strong></div>
                    </div>
                    @if (Model.Movie.LastUpdated.HasValue)
                    {
                        <div class="col-6">
                            <small class="text-muted">Last updated</small>
                            <div><strong>@Model.Movie.LastUpdated.Value.ToString("MMM dd, yyyy")</strong></div>
                        </div>
                    }
                </div>

                <div class="mt-4 d-flex gap-2 justify-content-end">
                    <form method="post" class="d-inline">
                        <input type="hidden" asp-for="Movie.Id" />
                        <button type="submit" class="btn btn-danger btn-lg" 
                                onclick="return confirm('Are you absolutely sure you want to delete this movie? This action cannot be undone.')">
                            <i class="fas fa-trash-alt me-2"></i>Yes, Delete Movie
                        </button>
                    </form>
                    <a asp-page="./Details" asp-route-id="@Model.Movie.Id" class="btn btn-info btn-lg">
                        <i class="fas fa-eye me-2"></i>View Details
                    </a>
                    <a asp-page="./Index" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left me-2"></i>Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
